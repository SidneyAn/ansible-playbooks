---
#
# Copyright (c) 2019 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to create static configuration and apply the puppet bootstrap
#   manifest.

- name: Create config workdir
  file:
    path: "{{ hieradata_workdir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- block:
  - name: Generating static config data
    command: "/usr/bin/sysinv-puppet create-static-config {{ hieradata_workdir }}"
    failed_when: false
    register: static_config_result

  - name: Fail if static hieradata cannot be generated
    fail:
      msg: "Failed to create puppet hiera static config."
    when: static_config_result.rc != 0

  - name: Write required system controller keystone user and project Ids to static hieradata if it's subcloud
    lineinfile:
      path: "{{ hieradata_workdir }}/static.yaml"
      line: "{{ item }}"
    with_items:
      - "keystone::dc_admin_user_id: {{ system_controller_keystone_admin_user_id }}"
      - "keystone::dc_admin_project_id: {{ system_controller_keystone_admin_project_id }}"
      - "openstack::keystone::bootstrap::dc_services_project_id: {{ system_controller_keystone_services_project_id }}"
      - "platform::sysinv::bootstrap::dc_sysinv_user_id: {{ system_controller_keystone_sysinv_user_id }}"

    when: distributed_cloud_role == 'subcloud'

  when: mode == 'bootstrap'

- block:
  - name: Set ssh_config tmp dir fact
    set_fact:
      temp_ssh_config_dir: /tmp/config/ssh_config

  - name: Prefetch static hieradata
    command: >-
      tar -C {{ hieradata_workdir }} -xpf {{ restore_data_file }} --transform='s,.*/,,'
      '{{ archive_puppet_permdir }}/*static.yaml'
    args:
      warn: false

  - name: Migrate static hieradata to new version
    command: >
      sed -i 's/{{ upgrade_metadata.from_release }}/{{ upgrade_metadata.to_release }}/g'
      {{ hieradata_workdir }}/static.yaml
    args:
      warn: false
    when: migrate_platform_data is defined and migrate_platform_data

  - name: Look for ssh_config dir in the backup tarball
    shell: "tar -tf {{ restore_data_file }} | grep 'opt/platform/config/.*/ssh_config'"
    args:
      warn: false
    failed_when: false
    register: search_ssh_config

  - block:
    - name: Create temp ssh_config dir
      file:
        path: "{{ temp_ssh_config_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Prefetch ssh_config
      command: >-
        tar -C {{ temp_ssh_config_dir }} -xpf {{ restore_data_file }} --transform='s,.*/,,'
        {{ archive_ssh_config_permdir }}
      args:
        warn: false

    - name: Remove the unwanted directory
      file:
        path: "{{ temp_ssh_config_dir }}/ssh_config"
        state: absent

    when: search_ssh_config.rc == 0
  when: mode == 'restore'

- name: Applying puppet bootstrap manifest
  command: >
    /usr/local/bin/puppet-manifest-apply.sh
    {{ hieradata_workdir }}
    {{ derived_network_params.controller_0_address }}
    controller ansible_bootstrap > {{ manifest_apply_log }}
  register: bootstrap_manifest
  environment:
    INITIAL_CONFIG_PRIMARY: "true"
    LC_ALL: "en_US.UTF-8"

- name: Fail if puppet manifest apply script returns an error
  fail:
    msg: >-
         Failed to apply bootstrap manifest. See /var/log/puppet/latest/puppet.log
         for details.
  when: bootstrap_manifest.rc != 0

- name: Ensure Puppet directory exists
  file:
    path: "{{ puppet_permdir }}"
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: 0755

- name: Persist puppet working files
  command: "mv {{ hieradata_workdir }} {{ puppet_permdir }}"
