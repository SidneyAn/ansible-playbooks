---
#
# Copyright (c) 2020 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to configure a NetApp storage backend
#

- name: Set backend filename
  set_fact:
    backend_file: "{{ trident_setup_dir }}/backend-{{ backend.netapp_config.backendName }}.yaml"


# We create, use and delete the backend configuration file, all under one task.
# We do it under one task, because this configuration file may contain user
# credential and doing these steps from 3 different tasks add security issues.
- name: Add NetApp backend
  shell: "{{ item }}"
  args:
    chdir: "{{ trident_setup_dir }}"
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  with_items:
    - echo '{{ backend.netapp_config | to_nice_json }}' > {{ backend_file }}
    - tridentctl -n {{ trident_namespace }} create backend -f {{ backend_file }}
    - rm -f {{ backend_file }}

# Configure kubernetes storage class
- name: Set StorageClass headers
  set_fact:
    storageclass_headers:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass

- name: Prepare StorageClass content
  set_fact:
    storageclass: "{{ storageclass_headers | combine(backend.k8s_storageclass) }}"

- name: Create storage-class.yaml
  copy:
    content: "{{ storageclass | to_nice_yaml }}"
    dest: "{{ trident_setup_dir }}/storage-class.yaml"

- name: Remove storage class if it exists
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf delete storageclass {{ backend.k8s_storageclass.metadata.name }}"
  failed_when: false

- name: Create K8s StorageClass
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f {{ trident_setup_dir }}/storage-class.yaml"
