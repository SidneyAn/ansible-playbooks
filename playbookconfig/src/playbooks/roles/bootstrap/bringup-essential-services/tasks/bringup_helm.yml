---
#
# Copyright (c) 2019 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# SUB-TASKS DESCRIPTION:
#   Bring up Helm
#   - Set up needed directories
#   - Create service account and cluster role binding
#   - Initialize Helm
#   - Restart lighttpd
#   - Generate repo index on target
#   - Add local helm repo
#   - Stop lighttpd
#   - Bind mount
#   - Generate repo index on source
#

- name: Create www group
  group:
    name: www
    gid: 1877
    state: present

- name: Create www user in preparation for Helm bringup
  user:
    name: www
    uid: 1877
    group: www
    groups: sys_protected
    shell: /sbin/nologin
    state: present

- name: Ensure /www/tmp exists
  file:
    path: /www/tmp
    state: directory
    recurse: yes
    owner: www
    group: root
    # mode: 1700

- name: Ensure /www/var exists
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: www
    group: root
  with_items:
    - /www/var
    - /www/var/log

- name: Set up lighttpd.conf
  copy:
    src: "{{ lighttpd_conf_template }}"
    dest: /etc/lighttpd/lighttpd.conf
    remote_src: yes
    mode: 0640

# TODO(tngo): Check if enable_https should be configurable..
# Resort to sed due to replace/lineinfile module deficiency
- name: Update lighttpd.conf
  command: "{{ item }}"
  args:
    warn: false
  with_items:
    - "sed -i -e 's|<%= @http_port %>|'$PORT_NUM'|g' /etc/lighttpd/lighttpd.conf"
    - "sed -i '/@enable_https/,/% else/d' /etc/lighttpd/lighttpd.conf"
    - "sed -i '/@tmp_object/,/%- end/d' /etc/lighttpd/lighttpd.conf"
    - "sed -i '/<% end/d' /etc/lighttpd/lighttpd.conf"
    - "sed -i '/@tpm_object/,/%- end/d' /etc/lighttpd/lighttpd.conf"
  environment:
    PORT_NUM: "{{ helm_repo_port }}"

- name: Set up lighttpd-inc.conf
  copy:
    src: "{{ lighttpd_inc_conf_template }}"
    dest: /etc/lighttpd/lighttpd-inc.conf
    remote_src: yes
    mode: 0640

- name: Update management subnet in lighttpd-inc.conf
  replace:
    path: /etc/lighttpd/lighttpd-inc.conf
    regexp: "var.management_ip_network =.*$"
    replace: 'var.management_ip_network = "{{ management_subnet }}"'

- name: Update pxe subnet in lighttp-inc.conf
  replace:
    path: /etc/lighttpd/lighttpd-inc.conf
    regexp: "var.pxeboot_ip_network =.*$"
    replace: 'var.pxeboot_ip_network = "{{ pxeboot_subnet }}"'

- name: Create source and target helm bind directories
  file:
    path: "{{ item }}"
    state: directory
    owner: www
    group: root
    mode: 0755
  with_items:
    - "{{ source_helm_bind_dir }}"
    - "{{ target_helm_bind_dir }}"

- name: Restore Helm charts if the host is bootstrapped in restore mode
  command: tar -C / --overwrite -xpf {{ restore_data_file }} {{ item }}
  args:
    warn: false
  become_user: root
  with_items:
    - "{{ source_helm_bind_dir | regex_replace('^\\/', '') }}"
  when: mode == "restore"

- block:
  - name: Create Helm repository directories
    file:
      path: "{{ item }}"
      state: directory
      owner: www
      group: root
      mode: 0755
    become_user: root
    with_items:
      - "{{ source_helm_bind_dir }}/{{ helm_repo_name_apps }}"
      - "{{ source_helm_bind_dir }}/{{ helm_repo_name_platform }}"
  when: mode == 'bootstrap'

# Note that /opt/platform/helm_charts are owned by www
# NOTE: helm --debug option displays vital information, no harm enabling.
# These only show in ansible.log on failure.
- name: Generate Helm repo indicies
  command: /sbin/helm repo index "{{ source_helm_bind_dir }}/{{ item }}" --debug
  become_user: www
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
    HOME: /home/sysadmin
  with_items:
    - "{{ helm_repo_name_apps }}"
    - "{{ helm_repo_name_platform }}"

- name: Stop lighttpd
  systemd:
    name: lighttpd
    state: stopped

- name: Disable lighttpd
  # Systemd module does not support disabled state. Resort to command
  command: systemctl disable lighttpd

- name: Bind mount on {{ target_helm_bind_dir }}
  # Due to deficiency of mount module, resort to command for now
  command: mount -o bind -t ext4 {{ source_helm_bind_dir }} {{ target_helm_bind_dir }}
  args:
    warn: false

- name: Enable lighttpd
  command: systemctl enable lighttpd

- name: Restart lighttpd for Helm
  systemd:
    name: lighttpd
    state: restarted

- block:
  # NOTE: helm --debug option displays vital information, no harm enabling.
  # These only show in ansible.log on failure.
  - name: Add Helm repos
    command: /sbin/helm repo add "{{ item }}" "http://127.0.0.1:{{ helm_repo_port }}/helm_charts/{{ item }}" --debug
    with_items:
      - "{{ helm_repo_name_apps }}"
      - "{{ helm_repo_name_platform }}"

  # NOTE: helm --debug option displays vital information, no harm enabling.
  # These only show in ansible.log on failure.
  - name: Update Helm repos
    command: /sbin/helm repo update --debug

  become_user: sysadmin
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
    HOME: /home/sysadmin

- block:
  - name: Set Armada overrides
    set_fact:
      helm_charts_url: "http://{{ controller_floating_address | ipwrap }}:{{ helm_repo_port }}/helm_charts"
      armada_default_password: "{{ lookup('password', '/dev/null chars=ascii_letters length=16') | b64encode }}"
      armada_password: "{{ lookup('password', '/dev/null chars=ascii_letters length=16') | b64encode }}"

  - name: Create keystone credentials for armada domain (local host client only)
    shell: "source /etc/platform/openrc; \
            openstack domain create {{ armada_domain }}; \
            openstack project create --domain {{ armada_domain }} 'service'; \
            openstack user create --domain {{ armada_domain }} \
            --project service --project-domain {{ armada_domain }} \
            --password {{ armada_password }} {{ armada_user }}; \
            openstack role add --project-domain {{ armada_domain }} \
            --user-domain {{ armada_domain }} --user {{ armada_user }} \
            --project service admin"
    args:
      executable: /bin/bash
    no_log: true

  - name: Create Armada overrides
    template:
      src: "armada-overrides.yaml.j2"
      dest: "/tmp/armada-overrides.yaml"

  - name: Create namespace for Armada
    command: >
      kubectl create namespace {{ armada_namespace }}
    failed_when: false
    register: create_ns_output

  - name: Fail if creating namespace fails
    fail:
      msg: "Failed to create {{ armada_namespace }} namespace. Error: {{ create_ns_output.stderr }}"
    when: create_ns_output.rc is defined and create_ns_output.rc !=0 and
          create_ns_output.stderr is not search('AlreadyExists')

  - name: Check if secret exists
    command: kubectl -n {{ armada_namespace }} get secret {{ armada_secret_name }}
    failed_when: false
    register: armada_get_secret_response

  # Set no_log to true so that we don't expose the local registry credentials
  - name: Create secret if it doesn't exist
    command: >-
      kubectl -n {{ armada_namespace }} create secret docker-registry {{ armada_secret_name }}
      --docker-server={{ local_registry }}
      --docker-username={{ local_registry_credentials['username'] }}
      --docker-password={{ local_registry_credentials['password'] }}
    when: armada_get_secret_response.rc != 0
    no_log: true

  # Workaround for helm v3 issue with null overrides.
  # Configure sane node label values that work with armada node selector
  - name: Create Armada node label
    command: >
      kubectl label node controller-0 armada=enabled --overwrite=true

  # To prevent helm-upload requiring sudo and a tty for password,
  # become the intended www user.
  - name: Upload Armada charts
    become_user: www
    command: >
      /usr/local/sbin/helm-upload stx-platform /opt/extracharts/armada-0.1.0.tgz

  # NOTE: helm --debug option displays vital information, no harm enabling.
  # These only show in ansible.log on failure.
  - name: Update info of available charts from chart repos
    command: >
      /sbin/helm repo update --debug

  # NOTE: helm --debug option displays vital information, no harm enabling.
  # These only show in ansible.log on failure.
  - name: Launch Armada with Helm v3
    command: >-
      /sbin/helm upgrade --install armada stx-platform/armada
      --namespace {{ armada_namespace }}
      --values /tmp/armada-overrides.yaml
      --debug

  become_user: sysadmin
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
    HOME: /home/sysadmin
